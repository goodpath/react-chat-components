{"version":3,"sources":["icons/people-group.svg","simple-chat/simple-chat.tsx","event-chat/event-chat.tsx","group-chat/group-chat.tsx","icons/plus-circle.svg","icons/megaphone.svg","icons/sign-out.svg","moderated-chat/moderated-chat.tsx","index.tsx"],"names":["_path","_path2","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgPeopleGroup","_ref","svgRef","title","titleId","props","xmlns","viewBox","width","height","ref","id","fill","fillRule","d","ForwardRef","users","rawUsers","socialChannelList","socialChannels","directChannelList","directChannels","allChannelIds","map","c","SimpleChat","pubnub","usePubNub","useState","theme","setTheme","showMembers","setShowMembers","showChannels","setShowChannels","welcomeMessages","setWelcomeMessages","usePresence","channels","presenceData","currentChannel","setCurrentChannel","presentUUIDs","occupants","o","uuid","presentUsers","filter","u","includes","currentUser","find","getUUID","useEffect","messages","rawMessages","forEach","message","channel","push","className","profileUrl","src","alt","name","onClick","onChannelSwitched","size","checked","onChange","isDark","occupancy","description","fetchMessages","enableReactions","reactionsPicker","showAsMessage","typingIndicator","fileUpload","emojiPicker","members","EventChat","React","useUser","user","total","ch","frameBorder","allowFullScreen","scrolling","hideSendButton","senderInfo","GroupChat","setChannel","useUsers","include","customFields","useChannels","useChannelMembers","customUUIDFields","totalPresence","SvgPlusCircle","_g","SvgMegaphone","SvgSignOut","BanNotification","BlockedNotification","JoinChannelModal","unJoinedChannels","setShowChannelsModal","joinChannel","FlagMessageModal","flaggingMessage","setShowFlaggingModal","flagMessage","allUsers","reason","setReason","type","placeholder","value","e","ModeratedChat","showChannelsModal","showFlaggingModal","channelsFilter","setChannelsFilter","membersFilter","setMembersFilter","setFlaggingMessage","allChannels","useUserMemberships","channelFields","customChannelFields","joinedChannels","refetchJoinedChannels","a","some","b","eTag","updated","channelMembers","totalchannelMembers","userBanned","custom","ban","userMuted","mutedChannels","split","userBlocked","blockedChannels","objects","setMemberships","leaveChannel","event","stopPropagation","removeMemberships","newCurrentChannel","publisher","setUUIDMetadata","data","flag","flaggedAt","Date","now","flaggedBy","undefined","onError","status","operation","statusCode","startsWith","alert","handleError","toLowerCase","extraActionsRenderer","m","disabled","presentMembers","PubNub","pubnubKeys","Math","floor","random","fileUploadPublishRetryLimit","pamEnabled","addListener","category","renderApp","SampleApps","client","path","to","PamError","href","KeysError","ReactDOM","render","StrictMode","publishKey","subscribeKey","document","getElementById"],"mappings":"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","file":"static/js/main.fc725693.chunk.js","sourcesContent":["var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPeopleGroup(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    height: 24,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M3.5 8a5.5 5.5 0 118.596 4.547 9.005 9.005 0 015.9 8.18.75.75 0 01-1.5.045 7.5 7.5 0 00-14.993 0 .75.75 0 01-1.499-.044 9.005 9.005 0 015.9-8.181A5.494 5.494 0 013.5 8zM9 4a4 4 0 100 8 4 4 0 000-8z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M17.29 8c-.148 0-.292.01-.434.03a.75.75 0 11-.212-1.484 4.53 4.53 0 013.38 8.097 6.69 6.69 0 013.956 6.107.75.75 0 01-1.5 0 5.193 5.193 0 00-3.696-4.972l-.534-.16v-1.676l.41-.209A3.03 3.03 0 0017.29 8z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPeopleGroup);\nexport default __webpack_public_path__ + \"static/media/people-group.b7547400.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from \"react\";\nimport { Picker } from \"emoji-mart\";\nimport DarkModeToggle from \"react-dark-mode-toggle\";\nimport { ChannelMetadataObject, UUIDMetadataObject, ObjectCustom } from \"pubnub\";\nimport { usePubNub } from \"pubnub-react\";\nimport {\n  ChannelList,\n  Chat,\n  MemberList,\n  MessageEnvelope,\n  MessageInput,\n  MessageList,\n  Themes,\n  TypingIndicator,\n  usePresence,\n} from \"@pubnub/react-chat-components\";\n\nimport \"./simple-chat.scss\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { ReactComponent as PeopleGroup } from \"../icons/people-group.svg\";\n\n/**\n * In this simple application, data about users, channels and sample welcome messages are\n * statically loaded from JSON files. In most cases users and channels data will be provided from an\n * external source or loaded from PubNub Objects storage with custom hooks included in the package.\n * Sample messages are fully optional.\n * */\nimport rawUsers from \"../../../data/users.json\";\nimport rawMessages from \"../../../data/messages-social.json\";\nimport socialChannels from \"../../../data/channels-social.json\";\nimport directChannels from \"../../../data/channels-direct.json\";\nconst users: UUIDMetadataObject<ObjectCustom>[] = rawUsers;\nconst socialChannelList: ChannelMetadataObject<ObjectCustom>[] = socialChannels;\nconst directChannelList: ChannelMetadataObject<ObjectCustom>[] = directChannels;\nconst allChannelIds = [...socialChannelList, ...directChannelList].map((c) => c.id);\n\nfunction SimpleChat() {\n  const pubnub = usePubNub(); //usePubNub is only used here to get current user info (as it's randomly selected)\n  const [theme, setTheme] = useState<Themes>(\"light\");\n  const [showMembers, setShowMembers] = useState(false);\n  const [showChannels, setShowChannels] = useState(true);\n  const [welcomeMessages, setWelcomeMessages] = useState<{ [channel: string]: MessageEnvelope[] }>(\n    {}\n  );\n  const [presenceData] = usePresence({ channels: allChannelIds }); // usePresnce is one of the custom hooks provided by Chat Components\n  const [currentChannel, setCurrentChannel] = useState(socialChannelList[0]);\n\n  const presentUUIDs = presenceData[currentChannel.id]?.occupants?.map((o) => o.uuid);\n  const presentUsers = users.filter((u) => presentUUIDs?.includes(u.id));\n  const currentUser = users.find((u) => u.id === pubnub.getUUID());\n\n  /** Prepare welcome messages for each channel injecting current user info into some of them */\n  useEffect(() => {\n    const messages: any = {};\n    [...rawMessages].forEach((message) => {\n      if (!messages.hasOwnProperty(message.channel)) messages[message.channel] = [];\n      if (message.uuid === \"current_user\" && currentUser?.id) message.uuid = currentUser?.id;\n      messages[message.channel].push(message);\n    });\n    setWelcomeMessages(messages);\n  }, [currentUser]);\n\n  /** Rendered markup is a mixture of PubNub Chat Components (Chat, ChannelList, MessageList,\n   * MessageInput, MemberList) and some elements to display additional information and to handle\n   * custom behaviors (dark mode, showing/hiding panels, responsive design) */\n  return (\n    <div className={`app-simple ${theme}`}>\n      {/* Be sure to wrap Chat component in PubNubProvider from pubnub-react package.\n      In this case it's done in the index.tsx file */}\n      <Chat theme={theme} users={users} currentChannel={currentChannel.id} channels={allChannelIds}>\n        <div className={`channels ${showChannels && \"shown\"}`}>\n          <div className=\"user\">\n            {currentUser?.profileUrl && <img src={currentUser?.profileUrl} alt=\"User avatar \" />}\n            <h4>\n              {currentUser?.name}{\" \"}\n              <span className=\"close\" onClick={() => setShowChannels(false)}>\n                ✕\n              </span>\n            </h4>\n          </div>\n          <h4>Channels</h4>\n          <div>\n            <ChannelList\n              channels={socialChannelList}\n              onChannelSwitched={(channel) => setCurrentChannel(channel)}\n            />\n          </div>\n          <h4>Direct Chats</h4>\n          <div>\n            <ChannelList\n              channels={directChannelList}\n              onChannelSwitched={(channel) => setCurrentChannel(channel)}\n            />\n          </div>\n          <div className=\"toggle\">\n            <span>Dark Mode</span>\n            <DarkModeToggle\n              size={50}\n              checked={theme === \"dark\"}\n              onChange={(isDark) => (isDark ? setTheme(\"dark\") : setTheme(\"light\"))}\n            />\n          </div>\n        </div>\n\n        <div className=\"chat\">\n          <div\n            className={`people ${showMembers ? \"active\" : \"\"}`}\n            onClick={() => setShowMembers(!showMembers)}\n          >\n            <span>{presenceData[currentChannel.id]?.occupancy || 0}</span>\n            <PeopleGroup />\n          </div>\n\n          <div className=\"info\">\n            <span className=\"hamburger\" onClick={() => setShowChannels(true)}>\n              ☰\n            </span>\n            <h4>{currentChannel.name}</h4>\n            <small>{currentChannel.description}</small>\n            <hr />\n          </div>\n          <MessageList\n            fetchMessages={0}\n            welcomeMessages={welcomeMessages[currentChannel.id]}\n            enableReactions\n            reactionsPicker={<Picker />}\n          >\n            <TypingIndicator showAsMessage />\n          </MessageList>\n          <MessageInput typingIndicator fileUpload=\"all\" emojiPicker={<Picker />} />\n        </div>\n\n        <div className={`members ${showMembers && \"shown\"}`}>\n          <h4>\n            Online Users\n            <span className=\"close\" onClick={() => setShowMembers(false)}>\n              ✕\n            </span>\n          </h4>\n          <MemberList members={presentUsers} />\n        </div>\n      </Chat>\n    </div>\n  );\n}\n\nexport default SimpleChat;\n","import React from \"react\";\nimport {\n  Chat,\n  MessageList,\n  MessageInput,\n  useUser,\n  usePresence,\n} from \"@pubnub/react-chat-components\";\nimport { ReactComponent as PeopleGroup } from \"../icons/people-group.svg\";\nimport \"./event-chat.scss\";\n\nconst channels = [\"polsatgames2\", \"izakooo\", \"dota2ruhub\"];\n\nfunction EventChat() {\n  const [currentChannel, setCurrentChannel] = React.useState(channels[0]);\n  const [user] = useUser();\n  // eslint-disable-next-line\n  const [presence, total] = usePresence({ channels: [currentChannel] });\n\n  return (\n    <div className=\"app-event\">\n      <Chat {...{ currentChannel, theme: \"event-dark\", users: [user] }}>\n        <div className=\"main\">\n          <div className=\"channels\">\n            Join a channel:\n            {channels.map((ch) => (\n              <span key={ch} className=\"link\" onClick={() => setCurrentChannel(ch)}>\n                {ch}\n              </span>\n            ))}\n          </div>\n\n          <div className=\"event\">\n            <iframe\n              src={`https://player.twitch.tv/?channel=${currentChannel}&parent=localhost`}\n              frameBorder=\"0\"\n              allowFullScreen={true}\n              scrolling=\"no\"\n              title=\"Stream\"\n            />\n          </div>\n\n          <div className=\"info\">\n            <div className=\"avatar\"></div>\n            <div>\n              <h3>{currentChannel}</h3>\n              <small>Additional channel info</small>\n            </div>\n          </div>\n\n          <div className=\"text\">\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n              incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\n              exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure\n              dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n              Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\n              mollit anim id est laborum.\n            </p>\n            <p>\n              Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque\n              laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi\n              architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas\n              sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\n              voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit\n              amet.\n            </p>\n            <p>\n              Consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore\n              et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum\n              exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi\n              consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam\n              nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla\n              pariatur?\"\n            </p>\n          </div>\n        </div>\n\n        <div className=\"chat\">\n          <div className=\"people\">\n            <span>Logged in as: {user?.name}</span>\n            <span>\n              {total} <PeopleGroup />\n            </span>\n          </div>\n          <MessageList welcomeMessages={false} />\n          <MessageInput hideSendButton senderInfo />\n        </div>\n      </Chat>\n    </div>\n  );\n}\n\nexport default EventChat;\n","import React from \"react\";\nimport {\n  ChannelList,\n  Chat,\n  MemberList,\n  MessageInput,\n  MessageList,\n  TypingIndicator,\n  useChannelMembers,\n  useChannels,\n  usePresence,\n  useUsers,\n} from \"@pubnub/react-chat-components\";\nimport { ChannelMetadataObject, ObjectCustom } from \"pubnub\";\nimport \"./group-chat.scss\";\nimport { ReactComponent as PeopleGroup } from \"../icons/people-group.svg\";\n\nfunction GroupChat() {\n  const [currentChannel, setChannel] = React.useState(\"space_ac4e67b98b34b44c4a39466e93e\");\n  const [showMembers, setShowMembers] = React.useState(false);\n\n  const [users] = useUsers({ include: { customFields: true } });\n  const [channels] = useChannels({ include: { customFields: true } });\n  const [members] = useChannelMembers({\n    channel: currentChannel,\n    include: { customUUIDFields: true },\n  });\n  // eslint-disable-next-line\n  const [presentMembers, totalPresence] = usePresence({ channels: [currentChannel] });\n\n  const handleSwitchChannel = (ch: ChannelMetadataObject<ObjectCustom>) => {\n    setChannel(ch.id);\n  };\n\n  return (\n    <div className=\"app-group\">\n      <Chat {...{ theme: \"dark\", currentChannel, users }}>\n        <div className=\"channels\">\n          <ChannelList channels={channels} onChannelSwitched={handleSwitchChannel} />\n        </div>\n\n        <div className=\"chat\">\n          <div\n            className={`people ${showMembers ? \"active\" : \"\"}`}\n            onClick={() => setShowMembers(!showMembers)}\n          >\n            <span>\n              {totalPresence || 0} / {members.length || 0}\n            </span>\n            <PeopleGroup />\n          </div>\n\n          <MessageList fetchMessages={10}>\n            <TypingIndicator showAsMessage />\n          </MessageList>\n\n          <MessageInput typingIndicator />\n        </div>\n\n        <div className={`members ${showMembers && \"shown\"}`}>\n          <MemberList members={members} />\n        </div>\n      </Chat>\n    </div>\n  );\n}\n\nexport default GroupChat;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPlusCircle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: 16,\n    height: 16,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M1.5 8a6.5 6.5 0 1113 0 6.5 6.5 0 01-13 0zM8 0a8 8 0 100 16A8 8 0 008 0zm.75 4.75a.75.75 0 00-1.5 0v2.5h-2.5a.75.75 0 000 1.5h2.5v2.5a.75.75 0 001.5 0v-2.5h2.5a.75.75 0 000-1.5h-2.5v-2.5z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlusCircle);\nexport default __webpack_public_path__ + \"static/media/plus-circle.8e12a5cf.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMegaphone(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: 16,\n    height: 16,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M3.25 9a.75.75 0 01.75.75c0 2.142.456 3.828.733 4.653a.121.121 0 00.05.064.207.207 0 00.117.033h1.31c.085 0 .18-.042.258-.152a.448.448 0 00.075-.366A16.74 16.74 0 016 9.75a.75.75 0 011.5 0c0 1.588.25 2.926.494 3.85.293 1.113-.504 2.4-1.783 2.4H4.9c-.686 0-1.35-.41-1.589-1.12A16.42 16.42 0 012.5 9.75.75.75 0 013.25 9z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M0 6a4 4 0 014-4h2.75a.75.75 0 01.75.75v6.5a.75.75 0 01-.75.75H4a4 4 0 01-4-4zm4-2.5a2.5 2.5 0 000 5h2v-5H4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M15.59.082A.75.75 0 0116 .75v10.5a.75.75 0 01-1.189.608l-.002-.001h.001l-.014-.01a5.829 5.829 0 00-.422-.25 10.58 10.58 0 00-1.469-.64C11.576 10.484 9.536 10 6.75 10a.75.75 0 110-1.5c2.964 0 5.174.516 6.658 1.043.423.151.787.302 1.092.443V2.014c-.305.14-.669.292-1.092.443C11.924 2.984 9.713 3.5 6.75 3.5a.75.75 0 110-1.5c2.786 0 4.826-.484 6.155-.957.665-.236 1.154-.47 1.47-.64a5.82 5.82 0 00.421-.25l.014-.01a.75.75 0 01.78-.061zm-.78.06zm.44 11.108l-.44.607.44-.607z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMegaphone);\nexport default __webpack_public_path__ + \"static/media/megaphone.14e3562d.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSignOut(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: 16,\n    height: 16,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    fillRule: \"evenodd\",\n    d: \"M2 2.75C2 1.784 2.784 1 3.75 1h2.5a.75.75 0 010 1.5h-2.5a.25.25 0 00-.25.25v10.5c0 .138.112.25.25.25h2.5a.75.75 0 010 1.5h-2.5A1.75 1.75 0 012 13.25V2.75zm10.44 4.5H6.75a.75.75 0 000 1.5h5.69l-1.97 1.97a.75.75 0 101.06 1.06l3.25-3.25a.75.75 0 000-1.06l-3.25-3.25a.75.75 0 10-1.06 1.06l1.97 1.97z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSignOut);\nexport default __webpack_public_path__ + \"static/media/sign-out.90a75957.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect, MouseEvent } from \"react\";\nimport { Picker } from \"emoji-mart\";\nimport { ChannelMetadataObject, UUIDMetadataObject, ObjectCustom } from \"pubnub\";\nimport { usePubNub } from \"pubnub-react\";\nimport {\n  ChannelList,\n  Chat,\n  MemberList,\n  MessageEnvelope,\n  MessageInput,\n  MessageList,\n  TypingIndicator,\n  useChannelMembers,\n  useChannels,\n  usePresence,\n  useUser,\n  useUserMemberships,\n  useUsers,\n} from \"@pubnub/react-chat-components\";\nimport \"emoji-mart/css/emoji-mart.css\";\n\nimport \"./moderated-chat.scss\";\nimport { ReactComponent as PeopleGroup } from \"../icons/people-group.svg\";\nimport { ReactComponent as PlusCircle } from \"../icons/plus-circle.svg\";\nimport { ReactComponent as Megaphone } from \"../icons/megaphone.svg\";\nimport { ReactComponent as SignOut } from \"../icons/sign-out.svg\";\n\nfunction ModeratedChat() {\n  const [showMembers, setShowMembers] = useState(false);\n  const [showChannels, setShowChannels] = useState(true);\n  const [showChannelsModal, setShowChannelsModal] = useState(false);\n  const [showFlaggingModal, setShowFlaggingModal] = useState(false);\n  const [channelsFilter, setChannelsFilter] = useState(\"\");\n  const [membersFilter, setMembersFilter] = useState(\"\");\n  const [flaggingMessage, setFlaggingMessage] = useState<MessageEnvelope>();\n  const defaultChannel = {\n    id: \"default\",\n    name: \"Default Channel\",\n    description: \"This is the default channel\",\n    eTag: \"\",\n    updated: \"\",\n  };\n\n  /**\n   * All data related to Users, Channels and Memberships is stored within PubNub Objects API\n   * This can be easily accessed using React Chat Components hooks\n   */\n  const pubnub = usePubNub();\n  const uuid = pubnub.getUUID();\n  const [currentUser] = useUser({ uuid });\n  const [allUsers] = useUsers();\n  const [allChannels] = useChannels({ include: { customFields: true } });\n  const [joinedChannels, , refetchJoinedChannels] = useUserMemberships({\n    uuid,\n    include: { channelFields: true, customChannelFields: true },\n  });\n  const unJoinedChannels = allChannels.filter((a) => !joinedChannels.some((b) => a.id === b.id));\n  const [currentChannel, setCurrentChannel] = useState<ChannelMetadataObject<ObjectCustom>>(\n    defaultChannel\n  );\n  const [channelMembers, , , totalchannelMembers] = useChannelMembers({\n    channel: currentChannel?.id,\n    include: { customUUIDFields: true },\n  });\n  const [presenceData] = usePresence({ channels: joinedChannels.map((c) => c.id) });\n  const presentUUIDs = presenceData[currentChannel?.id]?.occupants?.map((o) => o.uuid);\n\n  const userBanned = currentUser?.custom?.ban;\n  const userMuted = (currentUser?.custom?.mutedChannels as string)\n    ?.split(\",\")\n    .includes(currentChannel.id);\n  const userBlocked = (currentUser?.custom?.blockedChannels as string)\n    ?.split(\",\")\n    .includes(currentChannel.id);\n\n  const joinChannel = async (channel: ChannelMetadataObject<ObjectCustom>) => {\n    await pubnub.objects.setMemberships({ channels: [channel.id] });\n    refetchJoinedChannels();\n    setCurrentChannel(channel);\n    setShowChannelsModal(false);\n  };\n\n  const leaveChannel = async (channel: ChannelMetadataObject<ObjectCustom>, event: MouseEvent) => {\n    event.stopPropagation();\n    await pubnub.objects.removeMemberships({ channels: [channel.id] });\n    if (currentChannel.id === channel.id) {\n      const newCurrentChannel = joinedChannels?.find((ch) => ch.id !== channel.id);\n      if (newCurrentChannel) setCurrentChannel(newCurrentChannel);\n    }\n  };\n\n  const openFlaggingModal = (message: MessageEnvelope) => {\n    setFlaggingMessage(message);\n    setShowFlaggingModal(true);\n  };\n\n  const flagMessage = async (reason: string) => {\n    if (!flaggingMessage) return;\n    const uuid = flaggingMessage.uuid || flaggingMessage.publisher || \"\";\n    await pubnub.objects.setUUIDMetadata({\n      uuid,\n      data: {\n        custom: {\n          flag: true,\n          flaggedAt: Date.now(),\n          flaggedBy: `${currentUser.name} (${currentUser.id})`,\n          reason,\n        },\n      },\n    });\n    setFlaggingMessage(undefined);\n    setShowFlaggingModal(false);\n  };\n\n  const handleError = (e: any) => {\n    if (\n      (e.status.operation === \"PNPublishOperation\" && e.status.statusCode === 403) ||\n      e.message.startsWith(\"Publish failed\")\n    ) {\n      alert(\n        \"Your message was blocked. Perhaps you tried to use offensive language or send an image that contains nudity?\"\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (currentChannel?.id === \"default\" && joinedChannels.length)\n      setCurrentChannel(joinedChannels[0]);\n  }, [currentChannel, joinedChannels]);\n\n  /** Rendered markup is a mixture of PubNub Chat Components (Chat, ChannelList, MessageList,\n   * MessageInput, MemberList) and some elements to display additional information and to handle\n   * custom behaviors (channels modal, showing/hiding panels, responsive design) */\n  return (\n    <div className=\"app-moderated\">\n      {/* Be sure to wrap Chat component in PubNubProvider from pubnub-react package.\n        In this case it's done in the index.tsx file */}\n      <Chat\n        theme=\"light\"\n        users={allUsers}\n        currentChannel={currentChannel?.id}\n        /** Current uuid is passed here to subscribe and listen to User metadata changes */\n        channels={[...joinedChannels.map((c) => c.id), uuid]}\n        onError={(e) => handleError(e)}\n      >\n        {showChannelsModal && (\n          <JoinChannelModal {...{ unJoinedChannels, setShowChannelsModal, joinChannel }} />\n        )}\n        {showFlaggingModal && (\n          <FlagMessageModal {...{ flaggingMessage, setShowFlaggingModal, flagMessage, allUsers }} />\n        )}\n\n        {userBanned ? (\n          <BanNotification />\n        ) : (\n          <>\n            <div className={`channels ${showChannels && \"shown\"}`}>\n              <div className=\"user\">\n                {currentUser && currentUser?.profileUrl && (\n                  <img src={currentUser?.profileUrl} alt=\"User avatar \" />\n                )}\n                <div>\n                  <h4>\n                    {currentUser && currentUser?.name}\n                    <span className=\"close\" onClick={() => setShowChannels(false)}>\n                      ✕\n                    </span>\n                  </h4>\n                  <small>{currentUser?.custom?.title}</small>\n                </div>\n              </div>\n              <h4>\n                Channels <PlusCircle onClick={() => setShowChannelsModal(true)} className=\"join\" />\n              </h4>\n              <input\n                className=\"filter\"\n                onChange={(e) => setChannelsFilter(e.target.value)}\n                placeholder=\"Filter...\"\n                type=\"text\"\n                value={channelsFilter}\n              />\n              <div>\n                <ChannelList\n                  channels={joinedChannels.filter((c) =>\n                    c.name?.toLowerCase().includes(channelsFilter)\n                  )}\n                  extraActionsRenderer={(c) => (\n                    <div onClick={(e) => leaveChannel(c, e)}>\n                      <SignOut title=\"Leave channel\" />\n                    </div>\n                  )}\n                  onChannelSwitched={(channel) => setCurrentChannel(channel)}\n                />\n              </div>\n            </div>\n\n            <div className=\"chat\">\n              <div\n                className={`people ${showMembers ? \"active\" : \"\"}`}\n                onClick={() => setShowMembers(!showMembers)}\n              >\n                <span>\n                  <strong>{presenceData[currentChannel?.id]?.occupancy || 0} </strong>/{\" \"}\n                  {totalchannelMembers}\n                </span>\n                <PeopleGroup />\n              </div>\n\n              <div className=\"info\">\n                <span className=\"hamburger\" onClick={() => setShowChannels(true)}>\n                  ☰\n                </span>\n                <h4>{currentChannel?.name || currentChannel?.id}</h4>\n                <small>{currentChannel?.description || currentChannel?.id}</small>\n                <hr />\n              </div>\n\n              {userBlocked ? (\n                <BlockedNotification />\n              ) : (\n                <>\n                  <MessageList\n                    fetchMessages={20}\n                    enableReactions\n                    reactionsPicker={<Picker />}\n                    extraActionsRenderer={(m) => (\n                      <div onClick={() => openFlaggingModal(m)}>\n                        <Megaphone title=\"Report user\" />\n                      </div>\n                    )}\n                  >\n                    <TypingIndicator showAsMessage />\n                  </MessageList>\n                  <MessageInput\n                    disabled={userMuted}\n                    typingIndicator\n                    fileUpload=\"image\"\n                    emojiPicker={<Picker />}\n                    placeholder={userMuted ? \"You were muted from this channel\" : \"Type Message\"}\n                  />\n                </>\n              )}\n            </div>\n\n            <div className={`members ${showMembers ? \"shown\" : \"hidden\"}`}>\n              <h4>\n                Channel Members\n                <span className=\"close\" onClick={() => setShowMembers(false)}>\n                  ✕\n                </span>\n              </h4>\n              <input\n                className=\"filter\"\n                onChange={(e) => setMembersFilter(e.target.value)}\n                placeholder=\"Filter...\"\n                type=\"text\"\n                value={membersFilter}\n              />\n              <MemberList\n                members={channelMembers.filter((c) =>\n                  c.name?.toLowerCase().includes(membersFilter)\n                )}\n                presentMembers={presentUUIDs}\n              />\n            </div>\n          </>\n        )}\n      </Chat>\n    </div>\n  );\n}\n\nconst BanNotification = () => {\n  return <p className=\"banned\">Unfortunately, you were banned from the chat.</p>;\n};\n\nconst BlockedNotification = () => {\n  return <p className=\"blocked\">Unfortunately, you were blocked from this channel.</p>;\n};\n\nconst JoinChannelModal = ({ unJoinedChannels, setShowChannelsModal, joinChannel }: any) => {\n  return (\n    <div className=\"overlay\">\n      <div className=\"modal\">\n        <h4>\n          Join another channel\n          <span className=\"close\" onClick={() => setShowChannelsModal(false)}>\n            ✕\n          </span>\n        </h4>\n        <ChannelList\n          channels={unJoinedChannels}\n          onChannelSwitched={(channel) => joinChannel(channel)}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst FlagMessageModal = ({\n  flaggingMessage,\n  setShowFlaggingModal,\n  flagMessage,\n  allUsers,\n}: any) => {\n  const [reason, setReason] = useState(\"\");\n  const user = allUsers.find(\n    (u: UUIDMetadataObject<ObjectCustom>) => u.id === flaggingMessage?.uuid\n  );\n\n  return (\n    <div className=\"overlay\">\n      <div className=\"modal\">\n        <h4>\n          Report {user?.name}\n          <span\n            className=\"close\"\n            onClick={() => {\n              setShowFlaggingModal(false);\n              setReason(\"\");\n            }}\n          >\n            ✕\n          </span>\n        </h4>\n        <div className=\"form\">\n          <input\n            type=\"text\"\n            placeholder=\"Describe the report reason\"\n            value={reason}\n            onChange={(e) => setReason(e.target.value)}\n          />\n          <button onClick={() => flagMessage(reason)}>Submit</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ModeratedChat;\n","import React from \"react\";\nimport PubNub, { PubnubConfig } from \"pubnub\";\nimport ReactDOM from \"react-dom\";\nimport { PubNubProvider } from \"pubnub-react\";\nimport { HashRouter, Switch, Route, Link } from \"react-router-dom\";\n\nimport SimpleChat from \"./simple-chat/simple-chat\";\nimport EventChat from \"./event-chat/event-chat\";\nimport GroupChat from \"./group-chat/group-chat\";\nimport ModeratedChat from \"./moderated-chat/moderated-chat\";\nimport \"./index.css\";\n\nimport pubnubKeys from \"../pubnub-keys.json\";\nimport users from \"../../data/users.json\";\n\n/**\n * Prepare a PubNub instance and inject it into PubNubProvider\n * You should generate your own keyset on pubnub.com and paste it into pubnub-keys.json\n */\nconst pubnub = new PubNub({\n  ...pubnubKeys,\n  uuid: users[Math.floor(Math.random() * users.length)].id,\n  fileUploadPublishRetryLimit: 0,\n} as PubnubConfig);\n\n/** Detect PubNub access manager */\nlet pamEnabled = false;\npubnub.addListener({\n  status: function (status) {\n    if (status.category === \"PNAccessDeniedCategory\") {\n      pamEnabled = true;\n      renderApp();\n    }\n  },\n});\n\nconst SampleApps = () => {\n  return (\n    <PubNubProvider client={pubnub}>\n      <HashRouter>\n        <Switch>\n          <Route path=\"/group-chat\">\n            <GroupChat />\n          </Route>\n          <Route path=\"/event-chat\">\n            <EventChat />\n          </Route>\n          <Route path=\"/simple-chat\">\n            <SimpleChat />\n          </Route>\n          <Route path=\"/moderated-chat\">\n            <ModeratedChat />\n          </Route>\n          <Route path=\"/\">\n            <div className=\"welcome\">\n              <h1>Pubnub Chat Components</h1>\n              <h3>Here are some example applications built using PubNub and Chat Components:</h3>\n              <ul>\n                <li>\n                  <Link to=\"/simple-chat\">Simple Chat</Link>\n                </li>\n                <li>\n                  <Link to=\"/moderated-chat\">Moderated Chat</Link>\n                </li>\n              </ul>\n            </div>\n          </Route>\n        </Switch>\n      </HashRouter>\n    </PubNubProvider>\n  );\n};\n\nconst PamError = () => {\n  return (\n    <div className=\"pubnub-error\">\n      <h1>Warning! PubNub access manager enabled.</h1>\n      <p>\n        It looks like you have access manager enabled on your PubNub keyset. This sample app is not\n        adapted to work with PAM by default.\n      </p>\n      <p>\n        You can either disable PAM in the{\" \"}\n        <a href=\"https://dashboard.pubnub.com/\">PubNub Admin Portal</a> or add custom code to grant\n        all necessary permissions by yourself. Please referer to the{\" \"}\n        <a href=\"https://pubnub.github.io/react-chat-components/docs/?path=/story/introduction-pam--page\">\n          Chat Component docs\n        </a>{\" \"}\n        for more information.\n      </p>\n    </div>\n  );\n};\n\nconst KeysError = () => {\n  return (\n    <div className=\"pubnub-error\">\n      <h1>A PubNub account is required.</h1>\n      <p>\n        Visit the PubNub dashboard to create an account or login:\n        <br />\n        <a href=\"https://dashboard.pubnub.com/\">https://dashboard.pubnub.com/</a>\n        <br />\n        Create a new app or locate your app in the dashboard. Enable the Presence, Files, Objects,\n        and Storage features using a region of your choosing. For Objects, ensure the following are\n        enabled:\n      </p>\n      <ul>\n        <li>User Metadata Events</li>\n        <li>Channel Metadata Events</li>\n        <li>Membership Events</li>\n      </ul>\n      <p>Copy and paste your publish key and subscribe key into: </p>\n      <pre>pubnub-keys.json</pre>\n      <p>before continuing.</p>\n    </div>\n  );\n};\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      {pubnubKeys.publishKey.length && pubnubKeys.subscribeKey.length ? (\n        pamEnabled ? (\n          <PamError />\n        ) : (\n          <SampleApps />\n        )\n      ) : (\n        <KeysError />\n      )}\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n};\n\nrenderApp();\n"],"sourceRoot":""}